{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport './search-results.css';\n\n// const SearchResults = () => {\n//     const [results, setResults] = useState({ movies: [], music: [] }); //state for search results\n//     const location = useLocation();  //used to get the current location\n//     const navigate = useNavigate(); //used to navigate to different pages\n\n//     // Extract the search query from the URL\n//     const searchQuery = new URLSearchParams(location.search).get('query'); //gets search query from URL\n\n//     useEffect(() => {\n//         const fetchResults = () => {\n//             axios.get(`http://localhost:4000/api/searchStock?q=${encodeURIComponent(searchQuery)}`) //api endpoint for search\n//                 .then((res) => {\n//                     setResults(res.data);\n//                 })\n//                 .catch((error) => {\n//                     console.error('Error fetching search results:', error);\n//                 });\n//         };\n\n//         if (searchQuery) {\n//             fetchResults();\n//         }\n//     }, [searchQuery]); //re-renders when searchQuery changes\n\n//     return (\n//         <div>\n//             <h2>Search Results for \"{searchQuery}\"</h2>\n//             <div className=\"search-results-container\">\n//                 <div className=\"products-column\">\n//                     <h3>Movie Reviews</h3>\n//                     {results.movies.map((review, index) => (\n//                         <Card className=\"search-results-card\" key={index}>\n//                             <Card.Body>\n//                                 <Card.Title>{review.title}</Card.Title>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.genre}</Card.Subtitle>\n//                                 <Card.Text>\n//                                     {review.review}\n//                                     <br />\n//                                     <strong>Rating:</strong> {review.rating}\n//                                 </Card.Text>\n//                                 {review.trailer && (\n//                                     <iframe\n//                                         width=\"100%\"\n//                                         height=\"auto\"\n//                                         src={`https://www.youtube.com/embed/${new URLSearchParams(new URL(review.trailer).search).get('v')}`}\n//                                         title=\"YouTube video player\"\n//                                         frameborder=\"0\"\n//                                         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                                         allowFullScreen>\n//                                     </iframe>\n//                                 )}\n//                                 <button className='edit-button' onClick={() => navigate(`/edit-review/movie/${review._id}`)}>Edit</button>\n//                                 <button className='delete-button' onClick={() => navigate(`/delete-review/movie/${review._id}`)}>Delete</button>\n//                             </Card.Body>\n//                         </Card>\n//                     ))}\n//                 </div>\n//                 <div className=\"divider\"></div>\n//                 <div className=\"reviews-column\">\n//                     <h3>Music Reviews</h3>\n//                     {results.music.map((review, index) => (\n//                         <Card className=\"search-results-card\" key={index}>\n//                             <Card.Img variant=\"top\" src={review.albumCover} alt=\"Album Cover\" />\n//                             <Card.Body>\n//                                 <Card.Title>{review.title}</Card.Title>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.artist}</Card.Subtitle>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.genre}</Card.Subtitle>\n//                                 <Card.Text>\n//                                     {review.review}\n//                                     <br />\n//                                     <strong>Rating:</strong> {review.rating}\n//                                 </Card.Text>\n//                                 <iframe\n//                                     width=\"100%\"\n//                                     height=\"166\"\n//                                     frameborder=\"no\"\n//                                     allow=\"autoplay\"\n//                                     src={`https://w.soundcloud.com/player/?url=${review.soundcloud}&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true`}>\n//                                 </iframe>\n//                                 <button className='edit-button' onClick={() => navigate(`/edit-review/music/${review._id}`)}>Edit</button>\n//                                 <button className='delete-button' onClick={() => navigate(`/delete-review/music/${review._id}`)}>Delete</button>\n//                             </Card.Body>\n//                         </Card>\n\n//                     ))}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default SearchResults;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","axios","Card"],"sources":["/Users/benjamin/Desktop/College/Year3Sem2/ProfessionalPracticeInIT/ExHaven-MarketPlace/exhaven-marketplace/src/Components/search-results.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport './search-results.css'\n\n// const SearchResults = () => {\n//     const [results, setResults] = useState({ movies: [], music: [] }); //state for search results\n//     const location = useLocation();  //used to get the current location\n//     const navigate = useNavigate(); //used to navigate to different pages\n\n//     // Extract the search query from the URL\n//     const searchQuery = new URLSearchParams(location.search).get('query'); //gets search query from URL\n\n\n//     useEffect(() => {\n//         const fetchResults = () => {\n//             axios.get(`http://localhost:4000/api/searchStock?q=${encodeURIComponent(searchQuery)}`) //api endpoint for search\n//                 .then((res) => {\n//                     setResults(res.data);\n//                 })\n//                 .catch((error) => {\n//                     console.error('Error fetching search results:', error);\n//                 });\n//         };\n\n//         if (searchQuery) {\n//             fetchResults();\n//         }\n//     }, [searchQuery]); //re-renders when searchQuery changes\n\n//     return (\n//         <div>\n//             <h2>Search Results for \"{searchQuery}\"</h2>\n//             <div className=\"search-results-container\">\n//                 <div className=\"products-column\">\n//                     <h3>Movie Reviews</h3>\n//                     {results.movies.map((review, index) => (\n//                         <Card className=\"search-results-card\" key={index}>\n//                             <Card.Body>\n//                                 <Card.Title>{review.title}</Card.Title>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.genre}</Card.Subtitle>\n//                                 <Card.Text>\n//                                     {review.review}\n//                                     <br />\n//                                     <strong>Rating:</strong> {review.rating}\n//                                 </Card.Text>\n//                                 {review.trailer && (\n//                                     <iframe\n//                                         width=\"100%\"\n//                                         height=\"auto\"\n//                                         src={`https://www.youtube.com/embed/${new URLSearchParams(new URL(review.trailer).search).get('v')}`}\n//                                         title=\"YouTube video player\"\n//                                         frameborder=\"0\"\n//                                         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                                         allowFullScreen>\n//                                     </iframe>\n//                                 )}\n//                                 <button className='edit-button' onClick={() => navigate(`/edit-review/movie/${review._id}`)}>Edit</button>\n//                                 <button className='delete-button' onClick={() => navigate(`/delete-review/movie/${review._id}`)}>Delete</button>\n//                             </Card.Body>\n//                         </Card>\n//                     ))}\n//                 </div>\n//                 <div className=\"divider\"></div>\n//                 <div className=\"reviews-column\">\n//                     <h3>Music Reviews</h3>\n//                     {results.music.map((review, index) => (\n//                         <Card className=\"search-results-card\" key={index}>\n//                             <Card.Img variant=\"top\" src={review.albumCover} alt=\"Album Cover\" />\n//                             <Card.Body>\n//                                 <Card.Title>{review.title}</Card.Title>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.artist}</Card.Subtitle>\n//                                 <Card.Subtitle className=\"mb-2 text-muted\">{review.genre}</Card.Subtitle>\n//                                 <Card.Text>\n//                                     {review.review}\n//                                     <br />\n//                                     <strong>Rating:</strong> {review.rating}\n//                                 </Card.Text>\n//                                 <iframe\n//                                     width=\"100%\"\n//                                     height=\"166\"\n//                                     frameborder=\"no\"\n//                                     allow=\"autoplay\"\n//                                     src={`https://w.soundcloud.com/player/?url=${review.soundcloud}&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true`}>\n//                                 </iframe>\n//                                 <button className='edit-button' onClick={() => navigate(`/edit-review/music/${review._id}`)}>Edit</button>\n//                                 <button className='delete-button' onClick={() => navigate(`/delete-review/music/${review._id}`)}>Delete</button>\n//                             </Card.Body>\n//                         </Card>\n\n//                     ))}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default SearchResults;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sBAAsB;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}